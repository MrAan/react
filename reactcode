React Code

====================================

Create a Simple JSX Element

const JSX = <h1>Hello JSX!</h1>;

====================================

Create a Complex JSX Element

const JSX = 
<div>
  <h1>Paragraph One</h1>
  <p>Paragraph Two</p>
  <ul>
    <li>Paragraph Three</li>
    <li>Paragraph Three</li>
    <li>Paragraph Three</li>
  </ul>
</div>

====================================

Add Comments in JSX

const JSX = (
  <div>
    {/*Here is the comment section for JSX*/}
    <h1>This is a block of JSX</h1>
    <p>Here's a subtitle</p>
  </div>
);

====================================

Render HTML Elements to the DOM

const JSX = (
  <div>
    <h1>Hello World</h1>
    <p>Lets render this to the DOM</p>
  </div>
);
// Change code below this line
ReactDOM.render(
  //item to be rendered
  JSX
  //don't miss the comma
  ,
  //where to render
  document.getElementById('challenge-node')
);

====================================

Define an HTML Class in JSX

const JSX = (
  <div className='myDiv'>
    <h1>Add a class to this div</h1>
  </div>
);

Nice one!

====================================

Learn About Self-Closing JSX Tags

const JSX = (
  <div>
    <h2>Welcome to React!</h2> <br />
    <p>Be sure to close all tags!</p>
    <hr />
  </div>
);

By the power of Grayskull!

====================================

Create a Stateless Functional Component

const MyComponent = function() {
  // Change code below this line

  return (
    <div>
      I'm trying to figure out react component
    </div>
  );

  // Change code above this line
}

Checkmate!

====================================

Create a React Component

class MyComponent extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    // Change code below this line
    return(
      <div>
      <h1>Hello React!</h1>
    </div>
    );
    // Change code above this line
  }
};

Raise the roof!

====================================

Create a Component with Composition

const ChildComponent = () => {
  return (
    <div>
      <p>I am the child</p>
    </div>
  );
};

class ParentComponent extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    return (
      <div>
        <h1>I am the parent</h1>
        { /* Change code below this line */ }
          <ChildComponent />
        { /* Change code above this line */ }
      </div>
    );
  }
};

They're in another castle.

====================================

Use React to Render Nested Components

const TypesOfFruit = () => {
  return (
    <div>
      <h2>Fruits:</h2>
      <ul>
        <li>Apples</li>
        <li>Blueberries</li>
        <li>Strawberries</li>
        <li>Bananas</li>
      </ul>
    </div>
  );
};

const Fruits = () => {
  return (
    <div>
      { /* Change code below this line */ }
        <TypesOfFruit />
      { /* Change code above this line */ }
    </div>
  );
};

class TypesOfFood extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return (
      <div>
        <h1>Types of Food:</h1>
        { /* Change code below this line */ }
          <Fruits />
        { /* Change code above this line */ }
      </div>
    );
  }
};

Keep on trucking!

====================================

Compose React Components

class Fruits extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    return (
      <div>
        <h2>Fruits:</h2>
        { /* Change code below this line */ }
        <NonCitrus />
        <Citrus />
        { /* Change code above this line */ }
      </div>
    );
  }
};

class TypesOfFood extends React.Component {
  constructor(props) {
     super(props);
  }
  render() {
    return (
      <div>
        <h1>Types of Food:</h1>
        { /* Change code below this line */ }
        <Fruits />
        { /* Change code above this line */ }
        <Vegetables />
      </div>
    );
  }
};

====================================

Render a Class Component to the DOM

class TypesOfFood extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    return (
      <div>
        <h1>Types of Food:</h1>
        {/* Change code below this line */}
        <Fruits />
        <Vegetables />
        {/* Change code above this line */}
      </div>
    );
  }
};

// Change code below this line

ReactDOM.render(<TypesOfFood />, document.getElementById('challenge-node'))

====================================

Write a React Component from Scratch

// Change code below this line
class MyComponent extends React.Component{
  constructor(props) {
    super(props);
  }
  render() {
    return(
      <div id="challenge-code">
        <h1>My First React Component!</h1>
      </div>
    );
  }
};

ReactDOM.render(<MyComponent />, document.getElementById('challenge-node'))

Code long and proper!

====================================


